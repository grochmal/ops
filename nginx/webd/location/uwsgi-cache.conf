# nginx uwsgi simple cache (http, server, location)
# vi: set ft=nginx:
# This makes sense, the cache key includes the userid cookie but the userid
# cookie disables caching.  This is because we enable uwsgi_cache_lock
# and logged in users would need to wait for that lock to clear despite not
# using the cache.
uwsgi_cache        wsgicache;
uwsgi_cache_key    $scheme$server_name$request_uri$cookie_userid;
uwsgi_no_cache     $cookie_userid $cookie_sessionid;
uwsgi_cache_bypass $arg_nocache   $http_x_no_cache;

uwsgi_cache_valid 200 302  1m;
uwsgi_cache_valid 301     10m;
uwsgi_cache_valid 403 404 20s;

uwsgi_cache_min_uses   1;
uwsgi_cache_revalidate on;
uwsgi_cache_lock       on;
uwsgi_cache_use_stale  error timeout updating http_500 http_503;

# Use client buffering but allow X-Accel-Buffering
# to control upstream buffering.
# Also, use X-Accel-Expires, Expires, Cache-Control
# Set-Cookie and Vary to figure out caching possibilities.
uwsgi_request_buffering on;
uwsgi_ignore_headers X-Accel-Redirect
                     X-Accel-Limit-Rate
                     X-Accel-Charset;

