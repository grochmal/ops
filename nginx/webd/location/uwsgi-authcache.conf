# nginx uwsgi cache for APIs (http, server, location)
# vi: set ft=nginx:
# If and attacker repeatedly tries different cookie names
# he may be able to figure out cache bypasses and perform
# a DoS.  Yet, he will not be able to gain authentication.
# Therefore we can prevent the attack by caching all responses
# that are not successful.
uwsgi_cache        wsgicache;
uwsgi_cache_key    $scheme$server_name$request_uri$cookie_userid;
uwsgi_cache_bypass $arg_nocache $http_x_no_cache;

uwsgi_cache_valid 301 302 400 403 404 500 503 2s;

uwsgi_cache_min_uses   1;
uwsgi_cache_revalidate on;
uwsgi_cache_lock       on;
uwsgi_cache_use_stale  error timeout updating http_500 http_503;

uwsgi_request_buffering on;
uwsgi_ignore_headers X-Accel-Redirect
                     X-Accel-Limit-Rate
                     X-Accel-Charset;

